
networks:
  ip-resolver:


services:
  api:
    build:
      context: .
      dockerfile: apps/api/Dockerfile
    ports:
      - 3000:3000

  timescale:
    image: timescale/timescaledb:latest-pg16
    shm_size: 1gb
    command: -p ${POSTGRES_PORT}
    entrypoint: >
      bash -c '
        crond -f -L /dev/stdout &
        /usr/local/bin/docker-entrypoint.sh postgres -p $POSTGRES_PORT
      '
    restart: unless-stopped
    volumes:
      # - ./timescale/data:/var/lib/postgresql/data
      - ./timescale/backups:/usr/src/backups
      - ./timescale/config/schema.sql:/docker-entrypoint-initdb.d/schema.sql
      - ./timescale/config/cron:/etc/periodic:z #z = runnable
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    # only for dev
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    networks:
      - ip-resolver

  nginx:
    image: nginx:1.26.0-alpine
    restart: unless-stopped
    entrypoint: >
      /bin/sh -c 'envsubst < /nginx.conf.template > /etc/nginx/conf.d/nginx.conf &
      rm /etc/nginx/conf.d/default.conf && sed -i "s/@/$/g" /etc/nginx/conf.d/nginx.conf && nginx -t && /docker-entrypoint.sh nginx -g "daemon off;"'
    ports:
      - 7000:80
      - 7001:443
    volumes:
      - ./nginx/nginx.conf:/nginx.conf.template
      - ./nginx/proxy.conf:/etc/nginx/proxy.conf
      - ./nginx/404.html:/var/www/404.html
    environment:
      NGINX_DOMAIN: "ip-resolver.internal.brytebatteries.local"
      NGINX_REGEX:  'ip-resolver\.internal\.brytebatteries\.local'
    networks:
      - ip-resolver
